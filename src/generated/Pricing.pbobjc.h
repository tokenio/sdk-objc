// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pricing.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PricingInstructions;
@class TransferQuote;
@class TransferQuote_Fee;
@class TransferQuote_FxRate;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum FeeResponsibility

typedef GPB_ENUM(FeeResponsibility) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FeeResponsibility_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FeeResponsibility_InvalidFee = 0,

  /** fee at transfer source */
  FeeResponsibility_SourceFee = 1,

  /** fee at transfer destination */
  FeeResponsibility_DestinationFee = 2,

  /** shared fee */
  FeeResponsibility_SharedFee = 3,
};

GPBEnumDescriptor *FeeResponsibility_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FeeResponsibility_IsValidValue(int32_t value);

#pragma mark - Enum FxResponsibility

typedef GPB_ENUM(FxResponsibility) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  FxResponsibility_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  FxResponsibility_InvalidFx = 0,

  /** source handles FX */
  FxResponsibility_SourceFx = 1,

  /** source and destination share FX */
  FxResponsibility_SharedFx = 2,
};

GPBEnumDescriptor *FxResponsibility_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL FxResponsibility_IsValidValue(int32_t value);

#pragma mark - PricingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface PricingRoot : GPBRootObject
@end

#pragma mark - TransferQuote

typedef GPB_ENUM(TransferQuote_FieldNumber) {
  TransferQuote_FieldNumber_Id_p = 1,
  TransferQuote_FieldNumber_AccountCurrency = 2,
  TransferQuote_FieldNumber_FeesTotal = 3,
  TransferQuote_FieldNumber_FeesArray = 4,
  TransferQuote_FieldNumber_RatesArray = 5,
  TransferQuote_FieldNumber_ExpiresAtMs = 7,
};

/**
 * A bank quote for a transfer
 **/
@interface TransferQuote : GPBMessage

/** the quote id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** the account currency */
@property(nonatomic, readwrite, copy, null_resettable) NSString *accountCurrency;

/** Total fee amount, e.g., "0.25". String representing number in account currency. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *feesTotal;

/**
 * A collection of applicable fees. These line items are for informational purposes only.
 * (The Token network uses `fees_total` as amount to charge.)
 **/
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransferQuote_Fee*> *feesArray;
/** The number of items in @c feesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger feesArray_Count;

/** FX Rate chain */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<TransferQuote_FxRate*> *ratesArray;
/** The number of items in @c ratesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger ratesArray_Count;

/** The quote expiration time */
@property(nonatomic, readwrite) int64_t expiresAtMs;

@end

#pragma mark - TransferQuote_Fee

typedef GPB_ENUM(TransferQuote_Fee_FieldNumber) {
  TransferQuote_Fee_FieldNumber_Amount = 1,
  TransferQuote_Fee_FieldNumber_Description_p = 2,
};

@interface TransferQuote_Fee : GPBMessage

/** The fee amount */
@property(nonatomic, readwrite, copy, null_resettable) NSString *amount;

/** The fee description */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@end

#pragma mark - TransferQuote_FxRate

typedef GPB_ENUM(TransferQuote_FxRate_FieldNumber) {
  TransferQuote_FxRate_FieldNumber_BaseCurrency = 2,
  TransferQuote_FxRate_FieldNumber_QuoteCurrency = 3,
  TransferQuote_FxRate_FieldNumber_Rate = 4,
};

@interface TransferQuote_FxRate : GPBMessage

/** the base amount: 'EUR' in 'EUR/USD' */
@property(nonatomic, readwrite, copy, null_resettable) NSString *baseCurrency;

/** the quote amount: 'USD' in 'EUR/USD' */
@property(nonatomic, readwrite, copy, null_resettable) NSString *quoteCurrency;

/** the fx rate double amount in the string format. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *rate;

@end

#pragma mark - Pricing

typedef GPB_ENUM(Pricing_FieldNumber) {
  Pricing_FieldNumber_SourceQuote = 1,
  Pricing_FieldNumber_DestinationQuote = 2,
  Pricing_FieldNumber_Instructions = 3,
};

@interface Pricing : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) TransferQuote *sourceQuote;
/** Test to see if @c sourceQuote has been set. */
@property(nonatomic, readwrite) BOOL hasSourceQuote;

@property(nonatomic, readwrite, strong, null_resettable) TransferQuote *destinationQuote;
/** Test to see if @c destinationQuote has been set. */
@property(nonatomic, readwrite) BOOL hasDestinationQuote;

@property(nonatomic, readwrite, strong, null_resettable) PricingInstructions *instructions;
/** Test to see if @c instructions has been set. */
@property(nonatomic, readwrite) BOOL hasInstructions;

@end

#pragma mark - PricingInstructions

typedef GPB_ENUM(PricingInstructions_FieldNumber) {
  PricingInstructions_FieldNumber_FeesPaidBy = 1,
  PricingInstructions_FieldNumber_FxPerformedBy = 2,
};

@interface PricingInstructions : GPBMessage

@property(nonatomic, readwrite) FeeResponsibility feesPaidBy;

@property(nonatomic, readwrite) FxResponsibility fxPerformedBy;

@end

/**
 * Fetches the raw value of a @c PricingInstructions's @c feesPaidBy property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PricingInstructions_FeesPaidBy_RawValue(PricingInstructions *message);
/**
 * Sets the raw value of an @c PricingInstructions's @c feesPaidBy property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPricingInstructions_FeesPaidBy_RawValue(PricingInstructions *message, int32_t value);

/**
 * Fetches the raw value of a @c PricingInstructions's @c fxPerformedBy property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PricingInstructions_FxPerformedBy_RawValue(PricingInstructions *message);
/**
 * Sets the raw value of an @c PricingInstructions's @c fxPerformedBy property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPricingInstructions_FxPerformedBy_RawValue(PricingInstructions *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
