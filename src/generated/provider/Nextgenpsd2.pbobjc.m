// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: provider/nextgenpsd2.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "provider/Nextgenpsd2.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(AccountReference);
GPBObjCClassDeclaration(ReportExchangeRate);

#pragma mark - Nextgenpsd2Root

@implementation Nextgenpsd2Root

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Nextgenpsd2Root_FileDescriptor

static GPBFileDescriptor *Nextgenpsd2Root_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"io.token.proto.common.providerspecific.nextgenpsd2"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - NextGenPsd2AccountDetails

@implementation NextGenPsd2AccountDetails

@dynamic iban;
@dynamic bban;
@dynamic msisdn;
@dynamic currency;
@dynamic product;
@dynamic cashAccountType;
@dynamic bic;
@dynamic linkedAccounts;
@dynamic usuage;
@dynamic details;

typedef struct NextGenPsd2AccountDetails__storage_ {
  uint32_t _has_storage_[1];
  NSString *iban;
  NSString *bban;
  NSString *msisdn;
  NSString *currency;
  NSString *product;
  NSString *cashAccountType;
  NSString *bic;
  NSString *linkedAccounts;
  NSString *usuage;
  NSString *details;
} NextGenPsd2AccountDetails__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "iban",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Iban,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, iban),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bban",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Bban,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, bban),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msisdn",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Msisdn,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, msisdn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Currency,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "product",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Product,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, product),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "cashAccountType",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_CashAccountType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, cashAccountType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bic",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Bic,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, bic),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "linkedAccounts",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_LinkedAccounts,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, linkedAccounts),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "usuage",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Usuage,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, usuage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "details",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2AccountDetails_FieldNumber_Details,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(NextGenPsd2AccountDetails__storage_, details),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NextGenPsd2AccountDetails class]
                                     rootClass:[Nextgenpsd2Root class]
                                          file:Nextgenpsd2Root_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NextGenPsd2AccountDetails__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NextGenPsd2TransactionDetails

@implementation NextGenPsd2TransactionDetails

@dynamic entryReference;
@dynamic endToEndId;
@dynamic mandateId;
@dynamic checkId;
@dynamic creditorId;
@dynamic valueDate;
@dynamic currencyExchangeArray, currencyExchangeArray_Count;
@dynamic creditorName;
@dynamic hasCreditorAccount, creditorAccount;
@dynamic ultimateCreditor;
@dynamic debtorName;
@dynamic hasDebtorAccount, debtorAccount;
@dynamic ultimateDebtor;
@dynamic remittanceInformationStructured;
@dynamic additionalInformation;
@dynamic purposeCode;
@dynamic bankTransactionCode;
@dynamic proprietaryBankTransactionCode;

typedef struct NextGenPsd2TransactionDetails__storage_ {
  uint32_t _has_storage_[1];
  NSString *entryReference;
  NSString *endToEndId;
  NSString *mandateId;
  NSString *checkId;
  NSString *creditorId;
  NSString *valueDate;
  NSMutableArray *currencyExchangeArray;
  NSString *creditorName;
  AccountReference *creditorAccount;
  NSString *ultimateCreditor;
  NSString *debtorName;
  AccountReference *debtorAccount;
  NSString *ultimateDebtor;
  NSString *remittanceInformationStructured;
  NSString *additionalInformation;
  NSString *purposeCode;
  NSString *bankTransactionCode;
  NSString *proprietaryBankTransactionCode;
} NextGenPsd2TransactionDetails__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "entryReference",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_EntryReference,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, entryReference),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "endToEndId",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_EndToEndId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, endToEndId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mandateId",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_MandateId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, mandateId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "checkId",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_CheckId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, checkId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "creditorId",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_CreditorId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, creditorId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "valueDate",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_ValueDate,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, valueDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currencyExchangeArray",
        .dataTypeSpecific.clazz = GPBObjCClass(ReportExchangeRate),
        .number = NextGenPsd2TransactionDetails_FieldNumber_CurrencyExchangeArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, currencyExchangeArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "creditorName",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_CreditorName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, creditorName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "creditorAccount",
        .dataTypeSpecific.clazz = GPBObjCClass(AccountReference),
        .number = NextGenPsd2TransactionDetails_FieldNumber_CreditorAccount,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, creditorAccount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "ultimateCreditor",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_UltimateCreditor,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, ultimateCreditor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "debtorName",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_DebtorName,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, debtorName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "debtorAccount",
        .dataTypeSpecific.clazz = GPBObjCClass(AccountReference),
        .number = NextGenPsd2TransactionDetails_FieldNumber_DebtorAccount,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, debtorAccount),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "ultimateDebtor",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_UltimateDebtor,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, ultimateDebtor),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remittanceInformationStructured",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_RemittanceInformationStructured,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, remittanceInformationStructured),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "additionalInformation",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_AdditionalInformation,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, additionalInformation),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "purposeCode",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_PurposeCode,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, purposeCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bankTransactionCode",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_BankTransactionCode,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, bankTransactionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "proprietaryBankTransactionCode",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransactionDetails_FieldNumber_ProprietaryBankTransactionCode,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(NextGenPsd2TransactionDetails__storage_, proprietaryBankTransactionCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NextGenPsd2TransactionDetails class]
                                     rootClass:[Nextgenpsd2Root class]
                                          file:Nextgenpsd2Root_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NextGenPsd2TransactionDetails__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - NextGenPsd2TransferMetadata

@implementation NextGenPsd2TransferMetadata

@dynamic endToEndIdentification;
@dynamic remittanceInformationStructured;
@dynamic creditorAgent;
@dynamic creditorAgentName;

typedef struct NextGenPsd2TransferMetadata__storage_ {
  uint32_t _has_storage_[1];
  NSString *endToEndIdentification;
  NSString *remittanceInformationStructured;
  NSString *creditorAgent;
  NSString *creditorAgentName;
} NextGenPsd2TransferMetadata__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "endToEndIdentification",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransferMetadata_FieldNumber_EndToEndIdentification,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(NextGenPsd2TransferMetadata__storage_, endToEndIdentification),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "remittanceInformationStructured",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransferMetadata_FieldNumber_RemittanceInformationStructured,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(NextGenPsd2TransferMetadata__storage_, remittanceInformationStructured),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "creditorAgent",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransferMetadata_FieldNumber_CreditorAgent,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(NextGenPsd2TransferMetadata__storage_, creditorAgent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "creditorAgentName",
        .dataTypeSpecific.clazz = Nil,
        .number = NextGenPsd2TransferMetadata_FieldNumber_CreditorAgentName,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(NextGenPsd2TransferMetadata__storage_, creditorAgentName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[NextGenPsd2TransferMetadata class]
                                     rootClass:[Nextgenpsd2Root class]
                                          file:Nextgenpsd2Root_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(NextGenPsd2TransferMetadata__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ReportExchangeRate

@implementation ReportExchangeRate

@dynamic sourceCurrency;
@dynamic exchangeRate;
@dynamic unitCurrency;
@dynamic targetCurrency;
@dynamic quotationDate;
@dynamic contractIdentification;

typedef struct ReportExchangeRate__storage_ {
  uint32_t _has_storage_[1];
  NSString *sourceCurrency;
  NSString *exchangeRate;
  NSString *unitCurrency;
  NSString *targetCurrency;
  NSString *quotationDate;
  NSString *contractIdentification;
} ReportExchangeRate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sourceCurrency",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_SourceCurrency,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, sourceCurrency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "exchangeRate",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_ExchangeRate,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, exchangeRate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unitCurrency",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_UnitCurrency,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, unitCurrency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "targetCurrency",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_TargetCurrency,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, targetCurrency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "quotationDate",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_QuotationDate,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, quotationDate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "contractIdentification",
        .dataTypeSpecific.clazz = Nil,
        .number = ReportExchangeRate_FieldNumber_ContractIdentification,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ReportExchangeRate__storage_, contractIdentification),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ReportExchangeRate class]
                                     rootClass:[Nextgenpsd2Root class]
                                          file:Nextgenpsd2Root_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(ReportExchangeRate__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - AccountReference

@implementation AccountReference

@dynamic iban;
@dynamic bban;
@dynamic pan;
@dynamic maskedPan;
@dynamic msisdn;
@dynamic currency;

typedef struct AccountReference__storage_ {
  uint32_t _has_storage_[1];
  NSString *iban;
  NSString *bban;
  NSString *pan;
  NSString *maskedPan;
  NSString *msisdn;
  NSString *currency;
} AccountReference__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "iban",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_Iban,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AccountReference__storage_, iban),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "bban",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_Bban,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AccountReference__storage_, bban),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "pan",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_Pan,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AccountReference__storage_, pan),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "maskedPan",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_MaskedPan,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AccountReference__storage_, maskedPan),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msisdn",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_Msisdn,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AccountReference__storage_, msisdn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "currency",
        .dataTypeSpecific.clazz = Nil,
        .number = AccountReference_FieldNumber_Currency,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AccountReference__storage_, currency),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AccountReference class]
                                     rootClass:[Nextgenpsd2Root class]
                                          file:Nextgenpsd2Root_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AccountReference__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
