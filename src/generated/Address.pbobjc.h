// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: address.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - AddressRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface AddressRoot : GPBRootObject
@end

#pragma mark - Address

typedef GPB_ENUM(Address_FieldNumber) {
  Address_FieldNumber_HouseNumber = 1,
  Address_FieldNumber_HouseName = 2,
  Address_FieldNumber_Flats = 3,
  Address_FieldNumber_ConscriptionNumber = 4,
  Address_FieldNumber_Street = 5,
  Address_FieldNumber_Place = 6,
  Address_FieldNumber_PostCode = 7,
  Address_FieldNumber_City = 8,
  Address_FieldNumber_Country = 9,
  Address_FieldNumber_Full = 10,
  Address_FieldNumber_Hamlet = 11,
  Address_FieldNumber_Suburb = 12,
  Address_FieldNumber_Subdistrict = 13,
  Address_FieldNumber_District = 14,
  Address_FieldNumber_Province = 15,
  Address_FieldNumber_State = 16,
};

/**
 * A physical shipping/billing address. Modeled after OpenStreetMap format:
 * http://wiki.openstreetmap.org/wiki/Key:addr
 **/
GPB_FINAL @interface Address : GPBMessage

/**
 * The house number (may contain letters, dashes or other characters). Addresses
 * describes ways to tag a single building with multiple addresses.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *houseNumber;

/**
 * The name of a house. This is sometimes used in some countries like England
 * instead of (or in addition to) a house number.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *houseName;

/** The house numbers (range or list) of flats behind a door. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *flats;

/**
 * This special kind of housenumber relates to a settlement instead of a street.
 * Conscription numbers were introduced in the Austrio-Hungarian Empire and are
 * still in use in some parts of Europe, sometimes together with street-related
 * housenumbers which are also called orientation numbers.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *conscriptionNumber;

/** The name of the respective street. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *street;

/**
 * This is part of an address which refers to the name of some territorial zone
 * (usually like island, square) instead of a street. Should not be used together
 * with street.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *place;

/** The postal code of the building/area. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *postCode;

/** The name of the city as given in postal addresses of the building/area. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *city;

/** The ISO 3166-1 alpha-2 two letter country code in upper case. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *country;

/**
 * Use this for a full-text, often multi-line, address if you find the structured
 * address fields unsuitable for denoting the address of this particular location.
 * Examples: "Fifth house on the left after the village oak, Smalltown, Smallcountry"
 * or "1200 West Sunset Boulevard Suite 110A". Beware that these strings can hardly
 * be parsed by software.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *full;

/** The hamlet. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *hamlet;

/**
 * If an address exists several times in a city. You have to add the name of the
 * settlement. See Australian definition of suburb.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *suburb;

/** The subdistrict. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *subdistrict;

/** The district. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *district;

/**
 * The province. For Canada, uppercase two-letter postal abbreviations
 * (BC, AB, ON, QC, etc.) are used. In Russia a synonym region is widely
 * used
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *province;

/**
 * The state. For the US, uppercase two-letter postal abbreviations (AK, CA, HI, NY,
 * TX, WY, etc.) are used.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *state;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
