syntax = "proto3";
package io.token.proto.common.transaction;

option java_outer_classname = "TransactionProtos";

import "member.proto";
import "money.proto";

enum TransactionType {
  INVALID_TYPE = 0;
  DEBIT = 1;
  CREDIT = 2;
}

enum TransactionStatus {
  INVALID_STATUS = 0;             // invalid status
  PENDING = 1;                    // the transaction is pending submission
  PROCESSING = 7;                 // the transaction is being processed
  SUCCESS = 2;                    // the transaction has been successful
  FAILURE_CANCELED = 10;          // the transaction has been canceled, rolled back
  FAILURE_INSUFFICIENT_FUNDS = 3; // the transaction has failed due to insufficient funds
  FAILURE_INVALID_CURRENCY = 4;   // the transaction has failed due to currency mismatch
  FAILURE_PERMISSION_DENIED = 6;  // the transaction has failed due to access violation
  FAILURE_QUOTE_EXPIRED = 11;     // the transaction has failed because the quote has expired
  FAILURE_INVALID_AMOUNT = 12;    // the transaction has failed due to invalid amount
  FAILURE_INVALID_QUOTE = 13;     // the transaction has failed due to invalid quote (wrong fx rate)
  FAILURE_EXPIRED = 14;           // the transaction has failed to complete within alotted time
  FAILURE_GENERIC = 5;            // the transaction has failed due to other reasons
}

message Transaction {
  string id = 1;
  TransactionType type = 2;
  TransactionStatus status = 3;
  io.token.proto.common.money.Money amount = 4;
  string description = 5;

  string token_id = 6;                             // Points to the token, only set for Token transactions.
  string token_transfer_id = 7;                    // Points to the token transfer, only set for Token transactions.
  int64 created_at_ms = 8;
}

message GetBalancePayload {
  string member_id = 1;
  string account_id = 2;
  string nonce = 3;
}

message GetTransactionPayload {
  string member_id = 1;
  string account_id = 2;
  string transaction_id = 3;
  string nonce = 4;
}

message GetTransactionsPayload {
  string member_id = 1;
  string account_id = 2;
  string nonce = 3;
}

enum RequestStatus {
  INVALID_REQUEST = 0;
  SUCCESSFUL_REQUEST = 1;
  MORE_SIGNATURES_NEEDED = 2;
}