syntax = "proto3";

package io.token.proto.common.account;
option java_outer_classname = "AccountProtos";

import "banklink.proto";

// The payload of the bank authorization request.
// The value of the payload is encrypted as a serialized JSON object
// in a BankAuthorization.
// as described at https://developer.token.io/bank-integration/
message PlaintextBankAuthorization {
  string member_id = 1;    // Token member id
  string account_name = 2; // e.g., "Checking account with # ending 5678"
  BankAccount account = 3; // Account info by some method, e.g., SEPA
  int64 expiration_ms = 4; // Expiration time
}

// Optional account tag data.
message AccountTag {
  string key = 1;
  string value = 2;
}

// Not all accounts support all Token features.
message AccountFeatures {
  bool supports_payment = 1;       // can pay from account
  bool supports_information = 2;   // can get info, e.g., get balance
  bool requires_external_auth = 3;
}

// Token linked account.
message Account {
  string id = 1;                        // account ID
  string name = 2;                      // human-friendly name. E.g., "Checking account with number ...1234"
  string bank_id = 3;                   // bank ID
  repeated AccountTag tags = 4;
  bool is_locked = 5;                   // indicates whether account requires re-linking (perhaps after member recovery)
  AccountFeatures account_features = 6; // features account supports
}

// Account information. This is what the end user links with
// the bank and what Token uses when it talks to the bank.
// It's also part of the source or destination for a transfer.
message BankAccount {
  // Token account Destination. Useful as source or destination
  // for a transfer; doesn't make sense for a bank to "link" this.
  message Token {
    string member_id = 1;
    string account_id = 2;
  }

  // One-time encrypted authorization for an account
  message TokenAuthorization {
    io.token.proto.banklink.BankAuthorization authorization = 1;
  }

  // Source account managed by a coop bank
  message Bank {
    string bank_id = 1;
  }

  // SWIFT transfer
  message Swift {
    string bic = 1;     // BIC code AAAABBCCDD
    string account = 2;
  }

  // SEPA transfer.
  message Sepa {
    string iban = 1;    // International Bank Account Number
    string bic = 2;     // Bic code. Optional, except for non EEA countries
  }

  // ACH transfer
  message Ach {
    string routing = 1; // Routing number
    string account = 2;
  }

  // Faster Payments Service transfer (UK)
  message FasterPayments {
    string sort_code = 1;
    string account_number = 2;
  }

  oneof account {
    Token token = 1;
    TokenAuthorization token_authorization = 2;
    Swift swift = 3;
    Sepa sepa = 4;
    Ach ach = 5;
    Bank bank = 6;
    FasterPayments faster_payments = 9;
  }

  map<string, string> metadata = 7;
  AccountFeatures account_features = 8;
}

